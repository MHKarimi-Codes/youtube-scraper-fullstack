{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karimi\\\\OneDrive\\\\Desktop\\\\JavaScript Immersive\\\\YouTube-Scraper\\\\youscrap\\\\src\\\\components\\\\CommentsViewer.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CommentsViewer() {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [respond, setRespond] = useState(\"\");\n  const submitForm = async e => {\n    e.preventDefault(); // stop page reload\n    try {\n      const response = await axios.post('http://localhost:5000/scrape/', {\n        url\n      });\n      setRespond(response.data);\n      alert(\"The URL has been submitted\");\n    } catch (error) {\n      console.error(error);\n    }\n    console.log(url);\n  };\n  const handleCopy = () => {\n    if (!respond || !respond.comments) return;\n    const text = respond.comments.map(c => `${c.li}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"urlForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"paste the URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CommentsViewField\",\n      children: respond && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: respond.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopy,\n          children: \"copy comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: respond.comments && respond.comments.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.likes, \" \\uD83D\\uDC4D\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), \" \\u2014 \", c.text]\n          }, c.index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsViewer, \"Ejm/zWBbKLOqHRCVFYA9a8Dtr5U=\");\n_c = CommentsViewer;\nexport default CommentsViewer;\nvar _c;\n$RefreshReg$(_c, \"CommentsViewer\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","CommentsViewer","_s","url","setUrl","respond","setRespond","submitForm","e","preventDefault","response","post","data","alert","error","console","log","handleCopy","comments","text","map","c","li","children","className","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","likes","index","_c","$RefreshReg$"],"sources":["C:/Users/karimi/OneDrive/Desktop/JavaScript Immersive/YouTube-Scraper/youscrap/src/components/CommentsViewer.js"],"sourcesContent":["\r\nimport axios from \"axios\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction CommentsViewer() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [respond, setRespond] = useState(\"\");\r\n\r\n  const submitForm = async (e) => {\r\n    e.preventDefault(); // stop page reload\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/scrape/', { url });\r\n      setRespond(response.data);\r\n      alert(\"The URL has been submitted\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n    console.log(url);\r\n  };\r\n\r\n  const handleCopy = () =>{\r\n    if(!respond || !respond.comments) return;\r\n    const text = respond.comments.map(c => `${c.li}`)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"urlForm\">\r\n        <form onSubmit={submitForm}>\r\n          <input\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            placeholder=\"paste the URL\"\r\n          />\r\n          <button type=\"submit\">Start</button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"CommentsViewField\">\r\n        {respond && (\r\n          <div>\r\n            <h2>{respond.title}</h2>\r\n            {/* the copy button */}\r\n            <button onClick={handleCopy}>copy comments</button>\r\n            <ul>\r\n              {respond.comments && respond.comments.map((c) => (\r\n                <li key={c.index}>\r\n                  <strong>{c.likes} üëç</strong> ‚Äî {c.text}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentsViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}